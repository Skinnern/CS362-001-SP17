/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 02:56:15 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Appt_ESTest extends Appt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 1945, 11, 11, "}o&Bn,V)k&", "}o&Bn,V)k&");
      appt0.setStartDay(11);
      appt0.setStartHour(0);
      appt0.toString();
      assertEquals(0, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 1945, 11, 11, "}o&Bn,V)k&", "}o&Bn,V)k&");
      assertEquals(1945, appt0.getStartDay());
      
      appt0.setStartDay(11);
      boolean boolean0 = appt0.getValid();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(25, 25, 25, 25, 25, "", "");
      appt0.getTitle();
      assertEquals(25, appt0.getStartDay());
      assertEquals(25, appt0.getStartMonth());
      assertEquals(25, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(25, appt0.getStartYear());
      assertEquals(25, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(0, 59, 0, 0, 0, "", "");
      int int0 = appt0.getStartYear();
      assertEquals(59, appt0.getStartMinute());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, int0);
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(23, 191, 23, 0, 191, "RAENga{2W", "RAENga{2W");
      int int0 = appt0.getStartYear();
      assertEquals(23, appt0.getStartDay());
      assertEquals(23, appt0.getStartHour());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(191, int0);
      assertEquals(191, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals("RAENga{2W", appt0.getDescription());
      assertEquals("RAENga{2W", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt((-755), (-755), 0, 0, 0, "", "");
      int int0 = appt0.getStartMonth();
      assertEquals(0, int0);
      assertFalse(appt0.getValid());
      assertEquals(-755, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
      assertEquals(-755, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt((-48), (-48), (-48), (-48), (-48), "", "");
      int int0 = appt0.getStartMonth();
      assertEquals((-48), int0);
      assertEquals(-48, appt0.getStartHour());
      assertEquals(-48, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(-48, appt0.getStartDay());
      assertEquals(-48, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(2293, 2293, 2293, 2293, 2293, "", "n'+C6:5KW13Vl*4(?P");
      int int0 = appt0.getStartMinute();
      assertEquals(2293, int0);
      assertEquals(2293, appt0.getStartHour());
      assertEquals("", appt0.getTitle());
      assertEquals(2293, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(2293, appt0.getStartDay());
      assertEquals("n'+C6:5KW13Vl*4(?P", appt0.getDescription());
      assertEquals(2293, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt(1052, (-1379), (-1446), 1052, (-1446), "/", "");
      int int0 = appt0.getStartMinute();
      assertEquals(-1446, appt0.getStartYear());
      assertEquals(-1446, appt0.getStartDay());
      assertEquals(1052, appt0.getStartHour());
      assertEquals("", appt0.getDescription());
      assertEquals("/", appt0.getTitle());
      assertEquals(1052, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals((-1379), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "", "");
      int int0 = appt0.getStartHour();
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 1945, 11, 11, "}o&Bn,V)k&", "}o&Bn,V)k&");
      int int0 = appt0.getStartHour();
      assertEquals(11, appt0.getStartMonth());
      assertEquals(11, appt0.getStartMinute());
      assertEquals("}o&Bn,V)k&", appt0.getTitle());
      assertEquals(11, appt0.getStartYear());
      assertEquals("}o&Bn,V)k&", appt0.getDescription());
      assertEquals(11, int0);
      assertEquals(1945, appt0.getStartDay());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, (-21), 0, "ffolBDJ#nz sD'", "ffolBDJ#nz sD'");
      int int0 = appt0.getStartDay();
      assertEquals("ffolBDJ#nz sD'", appt0.getTitle());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartHour());
      assertEquals(-21, appt0.getStartMonth());
      assertEquals(0, int0);
      assertEquals("ffolBDJ#nz sD'", appt0.getDescription());
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt(1, 31, 31, 31, 31, "+Rsl!/Dy9qk^&MG*^e", "+Rsl!/Dy9qk^&MG*^e");
      String string0 = appt0.getDescription();
      assertEquals(31, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(31, appt0.getStartMinute());
      assertEquals(31, appt0.getStartMonth());
      assertEquals(1, appt0.getStartHour());
      assertEquals("+Rsl!/Dy9qk^&MG*^e", string0);
      assertEquals(31, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 1752, 0, 1752, "", "");
      appt0.setDescription("");
      assertEquals(1752, appt0.getStartYear());
      assertEquals(1752, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt((-399), (-399), (-399), 12, 12, "", "");
      appt0.setDescription((String) null);
      assertEquals(12, appt0.getStartYear());
      assertEquals(-399, appt0.getStartDay());
      assertEquals(-399, appt0.getStartHour());
      assertEquals(-399, appt0.getStartMinute());
      assertEquals(12, appt0.getStartMonth());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt((-399), (-399), (-399), 12, 12, "", "");
      appt0.setTitle("");
      assertEquals(-399, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(-399, appt0.getStartDay());
      assertEquals(12, appt0.getStartMonth());
      assertEquals(-399, appt0.getStartHour());
      assertEquals(12, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt(3011, 3011, 3011, 3011, 3011, "3mC", "%((&`a!_60?wol&");
      assertEquals("3mC", appt0.getTitle());
      
      appt0.setTitle((String) null);
      assertEquals(3011, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt((-1), (-1), (-1), (-1), 2166, ":", ":");
      String string0 = appt0.getTitle();
      assertEquals(":", string0);
      assertEquals(-1, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(-1, appt0.getStartMinute());
      assertEquals(-1, appt0.getStartHour());
      assertEquals(2166, appt0.getStartYear());
      assertEquals(":", appt0.getDescription());
      assertEquals(-1, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt((-48), (-48), (-48), (-48), (-48), "", "");
      boolean boolean0 = appt0.getValid();
      assertEquals(-48, appt0.getStartDay());
      assertEquals(-48, appt0.getStartYear());
      assertEquals(-48, appt0.getStartMinute());
      assertEquals(-48, appt0.getStartMonth());
      assertFalse(boolean0);
      assertEquals(-48, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt((-3538), (-3538), (-3538), (-3538), (-3538), "}!,>z!,\"];4#Y$0", "}!,>z!,\"];4#Y$0");
      int int0 = appt0.getStartHour();
      assertEquals("}!,>z!,\"];4#Y$0", appt0.getDescription());
      assertEquals(-3538, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("}!,>z!,\"];4#Y$0", appt0.getTitle());
      assertEquals(-3538, appt0.getStartDay());
      assertEquals((-3538), int0);
      assertEquals(-3538, appt0.getStartMinute());
      assertEquals(-3538, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt((-1), 0, 0, 0, (-1), "", "");
      int int0 = appt0.getStartYear();
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(-1, appt0.getStartHour());
      assertEquals((-1), int0);
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 616, 1816, " ~e1D^8iqe!vld", " ~e1D^8iqe!vld");
      int int0 = appt0.getStartMinute();
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(" ~e1D^8iqe!vld", appt0.getTitle());
      assertEquals(0, int0);
      assertEquals(" ~e1D^8iqe!vld", appt0.getDescription());
      assertEquals(616, appt0.getStartMonth());
      assertEquals(0, appt0.getStartDay());
      assertEquals(1816, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt((-1456), (-1456), (-1456), (-1456), (-1456), (String) null, (String) null);
      String string0 = appt0.getDescription();
      assertEquals(-1456, appt0.getStartYear());
      assertEquals(-1456, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertNotNull(string0);
      assertEquals(-1456, appt0.getStartMonth());
      assertEquals(-1456, appt0.getStartDay());
      assertEquals(-1456, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 20, 20, "", "");
      int int0 = appt0.getStartMonth();
      assertEquals(20, int0);
      assertEquals(20, appt0.getStartYear());
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartMinute());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, "Qkh", "Qkh");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t12/12/12 at 12:12pm ,Qkh, Qkh\n", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, "ZA:&@gDeYI3jc}", "ZA:&@gDeYI3jc}");
      appt0.setStartMonth(1515);
      appt0.toString();
      assertEquals(1515, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(0, 11, 11, 0, 0, "b~q:ajn}sf", "b~q:ajn}sf");
      assertEquals(11, appt0.getStartDay());
      assertEquals("b~q:ajn}sf", appt0.getDescription());
      assertEquals(11, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMonth());
      assertEquals("b~q:ajn}sf", appt0.getTitle());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, (-661), (-2648), 916, "", "");
      int int0 = appt0.getStartDay();
      assertEquals((-661), int0);
      assertEquals(916, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(-2648, appt0.getStartMonth());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(1307, 15, 1307, 1307, 15, "gE'", "gE'");
      appt0.setStartHour(15);
      assertEquals(15, appt0.getStartMinute());
      
      appt0.setStartMinute(1307);
      assertEquals(1307, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(19, (-3538), (-3538), (-3538), (-3538), (String) null, (String) null);
      assertEquals(-3538, appt0.getStartYear());
      assertEquals(-3538, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(19, appt0.getStartHour());
      assertEquals(-3538, appt0.getStartDay());
      assertEquals(-3538, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt((-1), 564, 2092, 0, (-1), "", "");
      int int0 = appt0.getStartDay();
      assertEquals(2092, int0);
      assertEquals(-1, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(-1, appt0.getStartHour());
      assertEquals(564, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(1, 31, 31, 31, 31, "+Rsl!/Dy9qk^&MG*^e", "+Rsl!/Dy9qk^&MG*^e");
      appt0.setStartYear((-1));
      assertEquals(-1, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 1945, 11, 11, "}o&Bn,V)k&", "}o&Bn,V)k&");
      assertEquals(1945, appt0.getStartDay());
      
      appt0.setStartDay(11);
      String string0 = appt0.toString();
      assertEquals("\t11/11/11 at 11:11am ,}o&Bn,V)k&, }o&Bn,V)k&\n", string0);
  }
}
